<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo nexT个人博客最常用操作及命令</title>
    <url>/2022/08/19/Hexo-nexT%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9C%80%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%8F%8A%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>本文是在网站已经部署生成后的常用操作和命令，目的是对个人博客网站进行管理。</p>
<hr>
<h1 id="1-定位博客所在路径"><a href="#1-定位博客所在路径" class="headerlink" title="1. 定位博客所在路径"></a>1. 定位博客所在路径</h1><p>首先要先找到博客所在的路径。我是苹果电脑，路径位于<code>/Users/peipei/blog</code>。在<strong>终端</strong>中输入<code>cd /Users/peipei/blog</code>定位到博客所在路径。</p>
<h1 id="2-新建一篇博客"><a href="#2-新建一篇博客" class="headerlink" title="2. 新建一篇博客"></a>2. 新建一篇博客</h1><p><code>sudo hexo n &quot;博客文档名&quot;</code>用管理员命令新建一篇博客，不需要加后缀，就能自动生成Markdown格式的文档。第一次操作需要输入电脑的管理员密码。新建的博客文档路径为<code>/Users/peipei/blog/source/_posts</code></p>
<h1 id="3-编辑一篇博客"><a href="#3-编辑一篇博客" class="headerlink" title="3. 编辑一篇博客"></a>3. 编辑一篇博客</h1><p><code>cd source/_posts</code>定位到博客文章的储存路径<br><code>sudo vim 博客文档名.md</code>管理员权限下使用vim编辑器编辑博客（vim编辑博客的常用命令可参考文章<a href="https://peipei0606.github.io/2022/08/19/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">Peiying’s blog-vim常用命令</a>）</p>
<h1 id="4-为博客添加分类和标签"><a href="#4-为博客添加分类和标签" class="headerlink" title="4. 为博客添加分类和标签"></a>4. 为博客添加分类和标签</h1><p>进入博客编辑后，可见hexo已经帮我们自动生成了如下文字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Linux最常用命令</span><br><span class="line">date: 2022-08-19 16:50:25</span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>添加分类需要添加<code>categories</code>，添加标签需要添加<code>tags</code>，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Linux最常用命令</span><br><span class="line">date: 2022-08-19 16:50:25</span><br><span class="line">categories: &quot;Linux&quot;</span><br><span class="line">tags: &quot;linux&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h1 id="5-删除博客文章"><a href="#5-删除博客文章" class="headerlink" title="5. 删除博客文章"></a>5. 删除博客文章</h1><p>直接在博客文档路径<code>/Users/peipei/blog/source/_posts</code>下面把想删的博客删掉，或者使用Linux命令<code>rm</code>删除博客文章，然后依次执行执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hexo clean</span><br><span class="line">sudo hexo g</span><br></pre></td></tr></table></figure>
<h1 id="6-添加菜单栏属性"><a href="#6-添加菜单栏属性" class="headerlink" title="6. 添加菜单栏属性"></a>6. 添加菜单栏属性</h1><p>菜单栏中默认只有“首页”“标签”“归档”等项目，如果需要添加新的页面（如“分类”），需要进行以下操作。</p>
<pre><code>* 新建“分类”的页面。`sudo hexo new page categories`
* 编辑config文件。`sudo vim _config.next.yml`路径在`/blog`下面
* 编辑config文件中的Menu模块。找到Menu模块，添加一行`categories: /categories/ || categories`，如下：
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Menu</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  categories: /categories/ || categories</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-生成网站到本地"><a href="#7-生成网站到本地" class="headerlink" title="7. 生成网站到本地"></a>7. 生成网站到本地</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hexo clean</span><br><span class="line">sudo hexo g</span><br><span class="line">sudo hexo s</span><br></pre></td></tr></table></figure>
<p>随后根据提示，在浏览器中打开<code>http://localhost:4000/</code></p>
<h1 id="8-发布网站到github"><a href="#8-发布网站到github" class="headerlink" title="8. 发布网站到github"></a>8. 发布网站到github</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hexo clean</span><br><span class="line">sudo hexo g</span><br><span class="line">sudo hexo d</span><br></pre></td></tr></table></figure>
<p>注意：这步的前提是在_config.yml文件中，已经在Deployment模块指定了repo的地址，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type:  git</span><br><span class="line">  repo:  https://github.com/PeiPei0606/peipei0606.github.io.git</span><br><span class="line">  branch:  master</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>nexT</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux最常用命令</title>
    <url>/2022/08/19/Linux%E6%9C%80%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>经常用到的命令，之后会根据需要慢慢补充</p>
<hr>
<p><code>pwd</code>显示当前目录<br><code>ls</code>列出目录以及文件名<br><code>cd</code>打开某个目录<br><code>cd ..</code>返回上一级目录<br><code>sudo</code>在命令前加sudo是使用管理员权限操作的意思</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Pysal学习笔记（1）——概述</title>
    <url>/2022/08/19/Pysal%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<h1 id="Pysal是什么"><a href="#Pysal是什么" class="headerlink" title="Pysal是什么"></a>Pysal是什么</h1><ul>
<li>Pysal是python的一个库，应用于空间分析</li>
<li>可侦测空间聚类、空间热点和异常值（<em>detection of spatial clusters, hot-spots, and outliers</em>）</li>
<li>基于空间数据的图形构建（<em>construction of graphs from spatial data</em>）</li>
<li>基于地理嵌入网络的空间回归和统计建模（<em>dspatial regression and statistical modeling on geographically embedded networks</em>）</li>
<li>可用于空间计量（<em>spatial econometrics</em>）</li>
<li>可用于时空数据探索分析（<em>exploratory spatio-temporal data analysis</em>）</li>
</ul>
<h1 id="Pysal组成部分"><a href="#Pysal组成部分" class="headerlink" title="Pysal组成部分"></a>Pysal组成部分</h1><h2 id="Lib"><a href="#Lib" class="headerlink" title="Lib"></a>Lib</h2><p>解决几何的计算问题，包括点、线、面的图形构建，以及空间权重矩阵、空间权重图的构建和交互式编辑——计算alpha形状、空间索引和空间拓扑关系，以及读写稀疏图数据，也可作为单纯的矢量数据python阅读器。</p>
<ul>
<li>libpysal：提供支持库其余部分的基本算法和数据结构。包括：<ul>
<li>io：输入输出模块。为常见的地理空间文件格式提供读写器</li>
<li>weights：权重模块。提供存储空间权重矩阵的猪泪，以及几个操作程序</li>
<li>cg：computational geometery，计算几何模块。有多种算法，包括有效处理Voronoi镶嵌和alpha形状的算法</li>
<li>examples：示例模块。带有示例数据集的模块。</li>
</ul>
</li>
</ul>
<h2 id="Explore"><a href="#Explore" class="headerlink" title="Explore"></a>Explore</h2><p>对空间和时空数据进行探索性分析的模块。往高了讲，这个包致力于更好地理解数据的模式并提出新的有趣的问题，而不是回答现存的问题。包括空间分布结构的表征方法（网络上、连续分布的空间中和多边形网格上）。另外，这个包还提供了检查动态分布的方法，例如组成过程或空间范围随着时间的变化。</p>
<ul>
<li>esda：实现全局和局部的空间分析和空间自相关，适用于连续数据和二相数据。此外，该包提供越来越多关于边界强度和统计分析中聚类误差测度的前沿统计</li>
<li>giddy：是esda对时空数据的拓展。包含了最先进的关于空间在随时间动态分布的方法</li>
<li>inequality：提供了空间和时间不平等的测算指标。包括经典度量例如Theil指数和均值形式的基尼系数，另外也有加入空间的考虑，例如将观测位置和空间配置纳入不平等的计算中</li>
<li>momepy：是一个用于城市形态定量分析的库——城市形态计量学（urban morphometrics）。目的在于为系统的城市形态分析提供泛用的工具。它可以和多种元素一起使用，同时也致力于构建足迹地图和街道网络。momepy代表着python中的形态测量</li>
<li>pointpats：支持点数据的统计分析，包括表征观察点模式的空间结构的方法：一个有着感兴趣现象记录的集合。这提供点模式整体几何概要的中心图测量，包括集中趋势、离散、强度和范围测量</li>
<li>segregation：计算超过40种不同的分离指数，并为测量、可视化和假设检验提供一套额外计算方法，代表了定量分离分析的最新技术</li>
<li>spaghetti：支持图形、网络、拓扑和推理的空间分析。包括用于对网络上的聚类进行统计测试的功能，具有多元处理功能的强大的Dijkstra最短路径算法，以及使用geopandas的高性能几何和空间计算方法，该方法是对网络进行高分辨率插值，以及将邻近网络观测连接到网络的重要方法。</li>
</ul>
<h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><p>与explore相反，model更侧重于验证分析。该包包括使用各种线性、广义线性、广义加性、非线性、多尺度和局部回归模型来估计数据中的空间关系。</p>
<ul>
<li>mgwr：使用单尺度和多尺度的地理加权回归模型，在各种广义线性模型框架以及模型诊断工具中提供用于估计、推理和预测的变尺度算法</li>
<li>spglm：实现了一组广义线性回归技术，包括高斯、泊松、逻辑回归（logistic regression），允许在计算和估计中进行稀疏矩阵运算，以降低内存开销并减少计算时间</li>
<li>spint：提供了一系列用于研究空间交互过程和分析空间交互数据的工具。包括便于校正和解析一系列重力型空间交互模型的功能，包含生产约束、吸引力约束或两者结合的模型。</li>
<li>spreg：提供经典和空间的经济计量模型估计。目前包括用于普通最小二乘估计（OLS），二阶最小二乘估计（2SLS）和似不相关估计（SUR），以及各种同态性、正态性、空间随机性等不同类型的空间自相关检验。它还包括了一套对具有二元独立变量（binary dependent variables）的空间依赖性测试。</li>
<li>spvcm：为估计空间相关方差分量模型提供了广义框架。该模型运行方差分量的空间依赖性，因此邻近的组可能会互相影响。还提供了一个通用框架，用于使用Gibbs采样，由numba包加速</li>
<li>tobler：提供了用于区域插值和dasymetric映射的功能。该名字是对传奇地理学家Waldo Tobler的直径，因为他是数十种空间分析方法的先驱。tobler包括使用区域加权方法插值的功能、利用遥感栅格数据作为辅助信息的基于回归模型的方法以及混合方法</li>
<li>access：旨在使分析计算空间可达性变得更简单。该工作在传统上面临两个挑战：[1]计算准确的旅行时间（travel time）矩阵；[2]使用旅行时间（travel time）和供需位置（supply and demand locations）得出测度。access实现了经典的空间访问模型，可以简单对比方法和假设</li>
<li>spopt：用于解决空间数据的优化问题。起源于Pysal中的一般区域模块，正在积极开发中，以包含新提出的区域化、设施定位和面向交通的解决方案模型和方法。</li>
</ul>
<h2 id="Viz"><a href="#Viz" class="headerlink" title="Viz"></a>Viz</h2><p>提供了支持创建地理可视化和各种空间分析输出的可视化表示功能。可视化在现代空间&#x2F;地理数据科学中是一个重要的角色。当前的包提供了等值线映射的分类方法，和一个用于链接pysal的通用API输出到python生态的可视化工具包。</p>
<ul>
<li>legendgram：是一个提供”legendgrams“图例的小包，用于可视化分层设色地图。有助于制图分析以及空间数据可视化</li>
<li>mapclassify：提供了分级设色图（Choropleth map）的功能。当前，有15种不同的分类方案可用，包括Fisher-Jenks最优分类的高优化实现。每个方案都继承了一个通用结构，以确保计算的可扩展并支持流式上下文的应用程序</li>
<li>splot：为空间分析提供统计可视化。用于可视化全局和局部空间自相关（通过Moran散点图和聚类图）、聚类动态的时间分析（通过热图和玫瑰图）和多变量分级设色图（通过值-alpha图）。高级API支持创建可发布的可视化</li>
</ul>
<h1 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h1><blockquote>
<p>[1] Sergio Rey, Phil, Taylor Oshan, Charles Schmidt, jlaura, Levi John Wolf, Dani Arribas-Bel, David C. Folch, mhwang4, Nicholas Malizia, Wei Kang, Pedro Amaral, James Gaboardi, Luc Anselin, eli knaap, Qunshan, Stefanie Lumnitz, Andrew Winslow, Bas Couwenberg, … Caleb Robinson. (2022). pysal&#x2F;pysal: Release v2.7.0 (v2.7.0). Zenodo. <a href="https://doi.org/10.5281/zenodo.6946292">https://doi.org/10.5281/zenodo.6946292</a><br>[2] <a href="https://github.com/pysal/pysal">https://github.com/pysal/pysal</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>pysal</tag>
      </tags>
  </entry>
  <entry>
    <title>vim常用命令</title>
    <url>/2022/08/19/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>vim是一个便捷易用的文书编辑器，Mac系统和Linux系统都自带vim编辑器。使用vim编辑Markdown文件的命令为<code>vim new.md</code>，默认进入的是<strong>命令模式</strong>，需要先输入<code>i</code>切换至<strong>输入模式</strong>才可以进行文字编辑。</p>
<h1 id="vim模式切换"><a href="#vim模式切换" class="headerlink" title="vim模式切换"></a>vim模式切换</h1><p><code>i</code>从命令模式切换至输入模式<br><code>esc</code>从输入模式切换至命令模式</p>
<h1 id="vim底线命令模式"><a href="#vim底线命令模式" class="headerlink" title="vim底线命令模式"></a>vim底线命令模式</h1><p><code>:wq</code>保存并退出<br><code>:q！</code>不保存退出<br><code>:w</code>保存文件<br><code>:q</code>退出文件<br><code>:h</code>帮助<br><code>:new</code>新建文件并用vim打开</p>
<h1 id="vim输入模式"><a href="#vim输入模式" class="headerlink" title="vim输入模式"></a>vim输入模式</h1><p>输入模式中的按键操作与其他文本编辑器的操作一致。<br><code>方向键</code>在文本中移动光标<br><code>回车键</code>换行<br><code>退格键</code>删除光标前一个字符<br><code>删除键</code>删除光标后一个字符<br><code>HOME/END</code>移动光标到行首&#x2F;行尾<br><code>Page Up/Page Down</code>上&#x2F;下翻页<br><code>Insert</code>切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</p>
<h1 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h1><blockquote>
<p><a href="https://www.runoob.com/linux/linux-vim.html">https://www.runoob.com/linux/linux-vim.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux/Ubuntu】解决“正在等待缓存锁：无法获得锁 /var/lib/dpkg/lock-frontend。锁正由进程16525持有”问题</title>
    <url>/2022/08/26/%E3%80%90Linux-Ubuntu%E3%80%91%E8%A7%A3%E5%86%B3%E2%80%9C%E6%AD%A3%E5%9C%A8%E7%AD%89%E5%BE%85%E7%BC%93%E5%AD%98%E9%94%81%EF%BC%9A%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81-var-lib-dpkg-lock-frontend%E3%80%82%E9%94%81%E6%AD%A3%E7%94%B1%E8%BF%9B%E7%A8%8B16525%E6%8C%81%E6%9C%89%E2%80%9D%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p><a href="https://www.helloimg.com/image/ZpkQaC"><img src="https://www.helloimg.com/images/2022/08/26/ZpkQaC.png" alt="lockerror.png"></a></p>
<h1 id="问题的出现"><a href="#问题的出现" class="headerlink" title="问题的出现"></a>问题的出现</h1><p>我正在使用命令<code>apt install gdebi</code>安装时，突然出现了这个问题。通过搜索得知应该是正在运行其他安装命令，发生了冲突。但都可以用以下的方法解决。</p>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol>
<li>在终端输入以下命令：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm /var/cache/apt/archives/lock</span><br></pre></td></tr></table></figure></li>
<li>根据上图的错误提示可知，我们需要删掉的锁路径位于<code>/var/lib/dpkg/lock-frontend</code>。因此在终端继续输入以下命令：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm /var/lib/dpkg/lock-frontend</span><br></pre></td></tr></table></figure></li>
<li>再次apt安装还是报错，如下图：<br><a href="https://www.helloimg.com/image/ZpkpHQ"><img src="https://www.helloimg.com/images/2022/08/26/ZpkpHQ.png" alt="ZpkpHQ.png"></a><br>这时候错误提示是出现了第二个锁，路径位于<code>/var/lib/dpkg/lock</code>，再次删掉。<br>在终端输入以下命令删掉第二个锁：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure></li>
<li>这时候再apt安装，就没有问题了。<br><a href="https://www.helloimg.com/image/Zpkkgg"><img src="https://www.helloimg.com/images/2022/08/26/Zpkkgg.png" alt="Zpkkgg.png"></a></li>
</ol>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>apt安装出现锁进程的错误时，都可以用<code>sudo rm 锁错误出现的路径</code>进行解决。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/weixin_44121966/article/details/118143296">https://blog.csdn.net/weixin_44121966/article/details/118143296</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux/Ubuntu】使用GDebi安装deb格式的安装包（强烈推荐）</title>
    <url>/2022/08/26/%E3%80%90Linux-Ubuntu%E3%80%91%E4%BD%BF%E7%94%A8GDebi%E5%AE%89%E8%A3%85deb%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%88%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90%EF%BC%89/</url>
    <content><![CDATA[<h1 id="问题的出现"><a href="#问题的出现" class="headerlink" title="问题的出现"></a>问题的出现</h1><p>之前在Snap中找到的WPS版本都比较古老，而且字体也并不跟随系统，导致界面很乱。我就在WPS官网上面找到了64位Deb格式的安装包，使用GDebi安装。<br><strong>GDebi</strong>可以使用图形界面（GUI模式）安装，也可以使用终端命令行模式（command line模式）安装。它能识别依赖项，在安装的过程中避免出现”依赖项错误“。</p>
<h1 id="方法一：图形界面安装（GUI模式）"><a href="#方法一：图形界面安装（GUI模式）" class="headerlink" title="方法一：图形界面安装（GUI模式）"></a>方法一：图形界面安装（GUI模式）</h1><ol>
<li>鼠标右键点击Deb文件，选择“使用其他程序打开”</li>
<li>等待一段时间，等GDebi解压安装包</li>
<li>点击右上角出现的“安装软件包“</li>
<li>等待安装</li>
</ol>
<p><a href="https://www.helloimg.com/image/ZpkYbP"><img src="https://www.helloimg.com/images/2022/08/26/ZpkYbP.png" alt="ZpkYbP.png"></a><br><a href="https://www.helloimg.com/image/ZpkfD6"><img src="https://www.helloimg.com/images/2022/08/26/ZpkfD6.png" alt="ZpkfD6.png"></a><br><a href="https://www.helloimg.com/image/Zpky0z"><img src="https://www.helloimg.com/images/2022/08/26/Zpky0z.png" alt="Zpky0z.png"></a></p>
<h1 id="方法二：终端命令行安装"><a href="#方法二：终端命令行安装" class="headerlink" title="方法二：终端命令行安装"></a>方法二：终端命令行安装</h1><p>找到deb所在的路径，然后输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gdebi deb文件所在的路径</span><br></pre></td></tr></table></figure>
<p>例如：<br><a href="https://www.helloimg.com/image/Zpr5jA"><img src="https://www.helloimg.com/images/2022/08/26/Zpr5jA.png" alt="Zpr5jA.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gdebi /下载/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>

<h1 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h1><p><a href="https://itsfoss.com/gdebi-default-ubuntu-software-center/#how-to-use-gdebi-for-installing-deb-packges-gui-and-terminal">https://itsfoss.com/gdebi-default-ubuntu-software-center/#how-to-use-gdebi-for-installing-deb-packges-gui-and-terminal</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux/Ubuntu】使用Snap安装软件</title>
    <url>/2022/08/26/%E3%80%90Linux-Ubuntu%E3%80%91%E4%BD%BF%E7%94%A8Snap%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="问题的出现"><a href="#问题的出现" class="headerlink" title="问题的出现"></a>问题的出现</h1><p>我想要安装个印象笔记，但是可惜没有Linux版本，于是就去万能的Snap商店里面找。Snap商店里面的安装包有很多，但是质量参差不齐，安装过程还是比较方便的，主要使用命令行模式。</p>
<h1 id="Snap安装方法"><a href="#Snap安装方法" class="headerlink" title="Snap安装方法"></a>Snap安装方法</h1><ol>
<li>终端输入<code>snap</code>可查看常用命令帮助：<br><a href="https://www.helloimg.com/image/ZprCE5"><img src="https://www.helloimg.com/images/2022/08/26/ZprCE5.png" alt="ZprCE5.png"></a></li>
<li>使用<code>snap find</code>搜索印象笔记安装包<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snap find evernote</span><br></pre></td></tr></table></figure>
<a href="https://www.helloimg.com/image/ZprG90"><img src="https://www.helloimg.com/images/2022/08/26/ZprG90.png" alt="ZprG90.png"></a></li>
<li>选择其中一个包，进行安装<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snap evernote-web-client</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>最后安装的印象笔记应该还是个开发版，可以登陆，可以同步笔记，但是不能编辑。可能是我还没有找到正确的打开方式。如果有能用的linux版印象笔记记得踢踢我。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.linux.com/topic/desktop/get-started-snap-packages-linux/">https://www.linux.com/topic/desktop/get-started-snap-packages-linux/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
